//
// ConcertsSeatGetResponse.swift
//
// Generated by swagger-codegen
// Modified by dk (dk@devrock.co.kr)
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ConcertsSeatGetResponse: EasyCodable {


    public var code: String?
    public var column: String?
    public var concertId: String?
    public var floor: String?
    public var id: Int64?
    public var row: String?
    public var timesId: Int?
    public var zone: String?


    
    public init(code: String?, column: String?, concertId: String?, floor: String?, id: Int64?, row: String?, timesId: Int?, zone: String?) {
        self.code = code
        self.column = column
        self.concertId = concertId
        self.floor = floor
        self.id = id
        self.row = row
        self.timesId = timesId
        self.zone = zone
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(code, forKey: "code")
        try container.encodeIfPresent(column, forKey: "column")
        try container.encodeIfPresent(concertId, forKey: "concertId")
        try container.encodeIfPresent(floor, forKey: "floor")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(row, forKey: "row")
        try container.encodeIfPresent(timesId, forKey: "timesId")
        try container.encodeIfPresent(zone, forKey: "zone")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        code = try container.decodeIfPresent(String.self, forKey: "code")
        column = try container.decodeIfPresent(String.self, forKey: "column")
        concertId = try container.decodeIfPresent(String.self, forKey: "concertId")
        floor = try container.decodeIfPresent(String.self, forKey: "floor")
        id = try container.decodeIfPresent(Int64.self, forKey: "id")
        row = try container.decodeIfPresent(String.self, forKey: "row")
        timesId = try container.decodeIfPresent(Int.self, forKey: "timesId")
        zone = try container.decodeIfPresent(String.self, forKey: "zone")
    }
}

